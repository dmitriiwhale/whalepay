from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import json
from typing import List, Dict, Any

def main_menu_keyboard() -> InlineKeyboardMarkup:
    """Generate the main menu keyboard"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõç –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="catalog")],
        [InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
    ])
    return keyboard

def catalog_keyboard(products: List[tuple]) -> InlineKeyboardMarkup:
    """Generate the catalog keyboard with products"""
    buttons = [
        [InlineKeyboardButton(
            text=f"{product[1]} - {product[3]} ‚ÇΩ", 
            callback_data=f"product_{product[0]}"
        )] for product in products
    ]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def product_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """Generate the product details keyboard"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å", callback_data=f"buy_{product_id}")],
        [InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="catalog")]
    ])
    return keyboard

def currency_selection_keyboard(product_id: int, available_currencies: List[str]) -> InlineKeyboardMarkup:
    """Generate keyboard for selecting cryptocurrency"""
    buttons = [
        [InlineKeyboardButton(
            text=f"{currency}", 
            callback_data=f"currency_{product_id}_{currency}"
        )] for currency in available_currencies
    ]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"product_{product_id}")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def payment_keyboard(pay_url: str, invoice_id: str) -> InlineKeyboardMarkup:
    """Generate keyboard for payment"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=pay_url)],
        [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"check_{invoice_id}")],
        [InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="catalog")]
    ])
    return keyboard

def back_to_catalog_keyboard() -> InlineKeyboardMarkup:
    """Generate keyboard to go back to catalog"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõç –ö –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="catalog")]
    ])
    return keyboard

def support_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_support")],
    ])
    return keyboard

def admin_support_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_to_{user_id}")],
        [InlineKeyboardButton(text="‚úÖ –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"close_ticket_{user_id}")],
    ])
    return keyboard 